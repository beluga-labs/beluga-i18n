import d,{createContext,useState,useEffect,useContext}from'react';import P from'html-react-parser';var i=createContext(null),R=({translations:e,locale:n,reloadKey:t,children:o})=>{let[s,r]=useState(n),[a,p]=useState(t);useEffect(()=>{t!==void 0&&t!==a&&(r(n),p(t));},[t,a,n]),useEffect(()=>{n!==s&&t===void 0&&r(n);},[n,s,t]);let f=l=>{r(l);};return d.createElement(i.Provider,{value:{translations:e,language:s,changeLanguage:f}},o)};var h=(e,n)=>n.split(".").reduce((t,o)=>t?.[o],e),c=(e,n={},t=true)=>{if(typeof e!="string")return e;let o=e.replace(/\{([^}]+)\}/g,(s,r)=>n.hasOwnProperty(r)?String(n[r]):s).replace(/\\\{([^}]+)\\\}/g,(s,r)=>`{${r}}`);return t&&o.includes("<")?P(o):o},b=()=>{let e=useContext(i);if(!e)throw new Error("useTranslations must be used within a TranslationsProvider");let{translations:n,language:t}=e;return {t:(o,s,r=true)=>{let a=h(n?.[t],o);return a?s&&Object.keys(s).length>0?c(a,s,r):r?c(a,{},r):a:o},changeLanguage:e.changeLanguage}};export{i as TranslationsContext,R as TranslationsProvider,h as getNestedTranslation,c as interpolateVariables,b as useTranslation};//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map