import g,{createContext,useState,useContext}from'react';var s=createContext(null),T=({translations:n,locale:r,children:e})=>{let[t,o]=useState(r),a=i=>{o(i);};return g.createElement(s.Provider,{value:{translations:n,language:t,changeLanguage:a}},e)};var p=(n,r)=>r.split(".").reduce((e,t)=>e?.[t],n),d=(n,r={})=>typeof n!="string"?n:n.replace(/\{([^}]+)\}/g,(e,t)=>r.hasOwnProperty(t)?String(r[t]):e).replace(/\\\{([^}]+)\\\}/g,(e,t)=>`{${t}}`),C=()=>{let n=useContext(s);if(!n)throw new Error("useTranslations must be used within a TranslationsProvider");let{translations:r,language:e}=n;return {t:(t,o)=>{let a=p(r?.[e],t);return a?o&&Object.keys(o).length>0?d(a,o):a:t},changeLanguage:n.changeLanguage}};export{s as TranslationsContext,T as TranslationsProvider,p as getNestedTranslation,d as interpolateVariables,C as useTranslation};//# sourceMappingURL=index.mjs.map
//# sourceMappingURL=index.mjs.map